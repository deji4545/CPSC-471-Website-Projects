{"ast":null,"code":"var _jsxFileName = \"/Users/umarhassan/Documents/GitHub/CPSC-471-Website-Projects/frontend/src/components/human-resource/HR.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport HRItem from './HRItem';\nimport Button from '../Button';\nimport { Link } from \"react-router-dom\"; // import HREdit from './HREdit';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HR = () => {\n  _s();\n\n  const [employees, setEmployees] = useState([]);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    const getPatients = async () => {\n      const tasksFromServer = await fetchEmployees(); //   console.log(tasksFromServer)\n\n      setEmployees(tasksFromServer);\n    };\n\n    getPatients();\n  }, []);\n\n  const fetchEmployees = async () => {\n    const res = await fetch('http://localhost:3000/api/HR/staff', {\n      method: \"GET\"\n    });\n    const data = await res.json();\n    return data;\n  };\n\n  const deleteEmployee = id => {\n    console.log(id);\n    fetch('http://localhost:3000/api/HR/staff/' + id, {\n      method: \"DELETE\"\n    }).then(response => response).then(data => {\n      setEmployees(employees.filter(val => {\n        if (id !== val.id_no) {\n          return val;\n        } else {\n          return null;\n        }\n      }));\n    });\n  };\n\n  const data = employees.filter(val => {\n    const name = (val.fname + \"\" + val.lname + \"\" + val.m_initial).toString().toLowerCase();\n    const stuff = search.toString().toLowerCase();\n\n    if (search === \"\") {\n      return val;\n    } else if (name.includes(stuff)) {\n      return val;\n    }\n\n    return null;\n  }).map((employee, index) => /*#__PURE__*/_jsxDEV(HRItem, {\n    employee: employee,\n    deleteEmployee: deleteEmployee\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [\"Search: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-button\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/edit/hr/add\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            text: \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), employees.length > 0 ? data : 'Nothing to show here']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HR, \"nIdszmXctzo3js1pPt21zwxDyzs=\");\n\n_c = HR;\nexport default HR;\n\nvar _c;\n\n$RefreshReg$(_c, \"HR\");","map":{"version":3,"sources":["/Users/umarhassan/Documents/GitHub/CPSC-471-Website-Projects/frontend/src/components/human-resource/HR.js"],"names":["useState","useEffect","HRItem","Button","Link","HR","employees","setEmployees","search","setSearch","getPatients","tasksFromServer","fetchEmployees","res","fetch","method","data","json","deleteEmployee","id","console","log","then","response","filter","val","id_no","name","fname","lname","m_initial","toString","toLowerCase","stuff","includes","map","employee","index","e","target","value","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport HRItem from './HRItem'\nimport Button from '../Button'\nimport { Link } from \"react-router-dom\";\n// import HREdit from './HREdit';\n\nconst HR = () => {\n    const [employees, setEmployees] = useState([])\n    const [search, setSearch] = useState('')\n\n    useEffect(() => {\n        const getPatients = async () => {\n            const tasksFromServer = await fetchEmployees()\n            //   console.log(tasksFromServer)\n            setEmployees(tasksFromServer)\n        }\n\n        getPatients()\n    }, [])\n\n    const fetchEmployees = async () => {\n        const res = await fetch('http://localhost:3000/api/HR/staff', { method: \"GET\" })\n        const data = await res.json()\n\n        return data\n    }\n\n\n    const deleteEmployee = (id) => {\n        console.log(id)\n        fetch('http://localhost:3000/api/HR/staff/' + id, { method: \"DELETE\" })\n            .then(response => response)\n            .then((data) => {\n                setEmployees(employees.filter(\n                    (val) => {\n                        if (id !== val.id_no) {\n                            return val\n                        } else {\n                            return null\n                        }\n                    }))\n            })\n    }\n\n    const data = employees.filter(\n        (val) => {\n            const name = (val.fname + \"\" + val.lname + \"\" + val.m_initial).toString().toLowerCase()\n            const stuff = search.toString().toLowerCase()\n            if (search === \"\") {\n                return val\n            } else if (name.includes(stuff)) {\n                return val\n            }\n            return null\n        }\n    ).map((employee, index) => (\n        <HRItem key={index} employee={employee} deleteEmployee={deleteEmployee} />))\n\n\n    return (\n        <div className=\"main-content\">\n\n            <div className=\"search-box\" >\n                Search: <input type=\"text\" placeholder=\"Search...\" value={search} onChange={(e) => setSearch(e.target.value)} />\n                <div className=\"add-button\"><Link to=\"/edit/hr/add\"><Button text=\"Add Employee\" /></Link></div>\n            </div>\n            {employees.length > 0 ?\n                data\n                : 'Nothing to show here'}\n\n        </div>\n    )\n}\n\nexport default HR\n"]},"metadata":{},"sourceType":"module"}